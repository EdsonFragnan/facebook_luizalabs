'use strict';var cov_9fopvza5g=function(){var path='C:\\Users\\Edson Fragnan\\Desktop\\Projetos\\facebook_luizalabs\\routes\\usuario_facebook.js',hash='a52597233e854805eb26a58f668fbb6efee70851',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'C:\\Users\\Edson Fragnan\\Desktop\\Projetos\\facebook_luizalabs\\routes\\usuario_facebook.js',statementMap:{'0':{start:{line:3,column:15},end:{line:3,column:47}},'1':{start:{line:4,column:24},end:{line:4,column:63}},'2':{start:{line:5,column:23},end:{line:5,column:61}},'3':{start:{line:6,column:31},end:{line:6,column:77}},'4':{start:{line:7,column:23},end:{line:7,column:61}},'5':{start:{line:8,column:24},end:{line:8,column:63}},'6':{start:{line:10,column:0},end:{line:141,column:2}},'7':{start:{line:35,column:2},end:{line:38,column:5}},'8':{start:{line:36,column:4},end:{line:36,column:50}},'9':{start:{line:37,column:4},end:{line:37,column:30}},'10':{start:{line:64,column:2},end:{line:67,column:5}},'11':{start:{line:65,column:4},end:{line:65,column:62}},'12':{start:{line:66,column:4},end:{line:66,column:34}},'13':{start:{line:91,column:2},end:{line:94,column:5}},'14':{start:{line:92,column:4},end:{line:92,column:62}},'15':{start:{line:93,column:4},end:{line:93,column:42}},'16':{start:{line:105,column:2},end:{line:108,column:5}},'17':{start:{line:106,column:4},end:{line:106,column:65}},'18':{start:{line:107,column:4},end:{line:107,column:34}},'19':{start:{line:136,column:2},end:{line:139,column:5}},'20':{start:{line:137,column:4},end:{line:137,column:63}},'21':{start:{line:138,column:4},end:{line:138,column:35}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:10,column:17},end:{line:10,column:18}},loc:{start:{line:10,column:26},end:{line:141,column:1}},line:10},'1':{name:'(anonymous_1)',decl:{start:{line:35,column:23},end:{line:35,column:24}},loc:{start:{line:35,column:37},end:{line:38,column:3}},line:35},'2':{name:'(anonymous_2)',decl:{start:{line:64,column:35},end:{line:64,column:36}},loc:{start:{line:64,column:49},end:{line:67,column:3}},line:64},'3':{name:'(anonymous_3)',decl:{start:{line:91,column:35},end:{line:91,column:36}},loc:{start:{line:91,column:49},end:{line:94,column:3}},line:91},'4':{name:'(anonymous_4)',decl:{start:{line:105,column:38},end:{line:105,column:39}},loc:{start:{line:105,column:52},end:{line:108,column:3}},line:105},'5':{name:'(anonymous_5)',decl:{start:{line:136,column:36},end:{line:136,column:37}},loc:{start:{line:136,column:50},end:{line:139,column:3}},line:136}},branchMap:{},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0},b:{},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const logger=(cov_9fopvza5g.s[0]++,require('../servicos/logger.js'));const ctrlGetUsuarios=(cov_9fopvza5g.s[1]++,require('./../controllers/getUsuarios'));const ctrlGetUsuario=(cov_9fopvza5g.s[2]++,require('./../controllers/getUsuario'));const ctrlGetUsuarioFacebook=(cov_9fopvza5g.s[3]++,require('./../controllers/getUsuarioFacebook'));const ctrlDelUsuario=(cov_9fopvza5g.s[4]++,require('./../controllers/delUsuario'));const ctrlPostUsuario=(cov_9fopvza5g.s[5]++,require('./../controllers/postUsuario'));cov_9fopvza5g.s[6]++;module.exports=app=>{cov_9fopvza5g.f[0]++;cov_9fopvza5g.s[7]++;/**
   * @api {get} /usuarios Exibe uma lista usuários
   * @apiGroup Usuario
   * @apiSuccessExample {json} Sucesso
   *    HTTP/1.1 200 OK
   *    [{
   *        "facebookId": "100001718509097",
   *        "first_name": "Edson",
   *        "middle_name": "Luiz",
   *        "last_name": "Fragnan",
   *        "name": "Edson Fragnan",
   *        "birthday": "não especificado",
   *        "hometown": "não especificado",
   *        "locale": "não especificado",
   *        "gender": "não especificado",
   *        "public_key": "não especificado",
   *        "website": "não especificado"
   *    }]
   * @apiErrorExample {json} Erro de consulta
   *    HTTP/1.1 412
   * @apiErrorExample {json} Não possui registros.
   *    HTTP/1.1 204
   */app.get('/usuarios',(req,res)=>{cov_9fopvza5g.f[1]++;cov_9fopvza5g.s[8]++;logger.info('Rota acessada: /usuarios - GET');cov_9fopvza5g.s[9]++;ctrlGetUsuarios(app,res);});/**
   * @api {get} /usuarios/usuario/:id Exibe um usuário
   * @apiGroup Usuario
   * @apiSuccess {String} id id de registro
   * @apiSuccessExample {json} Sucesso
   *    HTTP/1.1 200 OK
   *    { 
   *        "facebookId": "100001718509097",
   *        "first_name": "Edson",
   *        "middle_name": "Luiz",
   *        "last_name": "Fragnan",
   *        "name": "Edson Fragnan",
   *        "birthday": "não especificado",
   *        "hometown": "não especificado",
   *        "locale": "não especificado",
   *        "gender": "não especificado",
   *        "public_key": "não especificado",
   *        "website": "não especificado"
   *    }
   * @apiErrorExample {json} Erro de consulta
   *    HTTP/1.1 412
   * @apiErrorExample {json} Não possui registros.
   *    HTTP/1.1 204
   */cov_9fopvza5g.s[10]++;app.get('/usuarios/usuario/:id',(req,res)=>{cov_9fopvza5g.f[2]++;cov_9fopvza5g.s[11]++;logger.info('Rota acessada: /usuarios/usuario/:id - GET');cov_9fopvza5g.s[12]++;ctrlGetUsuario(app,req,res);});/**
   * @api {get} /usuarios/facebook/:id Exibe um usuário direto no facebook
   * @apiGroup Usuario
   * @apiSuccess {String} id id de registro
   * @apiSuccessExample {json} Sucesso
   *    HTTP/1.1 200 OK
   *    {
   *        "facebookId": "100001718509097",
   *        "first_name": "Edson",
   *        "middle_name": "Luiz",
   *        "last_name": "Fragnan",
   *        "name": "Edson Fragnan",
   *        "birthday": "não especificado",
   *        "hometown": "não especificado",
   *        "locale": "não especificado",
   *        "gender": "não especificado",
   *        "public_key": "não especificado",
   *        "website": "não especificado"
   *    }
   * @apiErrorExample {json} Usuário não encontrado no facebook.
   *    HTTP/1.1 404
   */cov_9fopvza5g.s[13]++;app.get('/usuario/facebook/:id',(req,res)=>{cov_9fopvza5g.f[3]++;cov_9fopvza5g.s[14]++;logger.info('Rota acessada: /usuario/facebook/:id - GET');cov_9fopvza5g.s[15]++;ctrlGetUsuarioFacebook(app,req,res);});/**
   * @api {DELETE} /usuarios/usuario/:id Deleta um usuário da base de dados
   * @apiGroup Usuario
   * @apiSuccess {String} id id de registro
   * @apiSuccessExample {json} Sucesso
   *    HTTP/1.1 204 OK
   * @apiErrorExample {json} Usuário não encontrado no banco.
   *    HTTP/1.1 404
   */cov_9fopvza5g.s[16]++;app.delete('/usuarios/usuario/:id',(req,res)=>{cov_9fopvza5g.f[4]++;cov_9fopvza5g.s[17]++;logger.info('Rota acessada: /usuarios/usuario/:id - DELETE');cov_9fopvza5g.s[18]++;ctrlDelUsuario(app,req,res);});/**
   * @api {POST} /usuarios/usuario/:id Cadastrar um usuário na base de dados
   * @apiGroup Usuario
   * @apiSuccess {String} id id de registro
   * @apiSuccessExample {json} Sucesso
   *    HTTP/1.1 200 OK
   *    {
   *        "facebookId": "100001718509097",
   *        "first_name": "Edson",
   *        "middle_name": "Luiz",
   *        "last_name": "Fragnan",
   *        "name": "Edson Fragnan",
   *        "birthday": "não especificado",
   *        "hometown": "não especificado",
   *        "locale": "não especificado",
   *        "gender": "não especificado",
   *        "public_key": "não especificado",
   *        "website": "não especificado"
   *    }
   * @apiErrorExample {json} Usuário facebook não encontrado.
   *    HTTP/1.1 404
   * @apiErrorExample {json} Erros de validacão encontrados.
   *    HTTP/1.1 400
   * @apiErrorExample {json} Erro ao inserir no banco.
   *    HTTP/1.1 412
   */cov_9fopvza5g.s[19]++;app.post('/usuarios/usuario/:id',(req,res)=>{cov_9fopvza5g.f[5]++;cov_9fopvza5g.s[20]++;logger.info('Rota acessada: /usuarios/usuario/:id - POST');cov_9fopvza5g.s[21]++;ctrlPostUsuario(app,req,res);});};